warning: LF will be replaced by CRLF in package-lock.json.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in package.json.
The file will have its original line endings in your working directory
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex e75ab5e..bdb9283 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -63,5 +63,5 @@[m [mtypings/[m
 #credentials[m
 credentials/*.json[m
 content.json[m
[31m-[m
[32m+[m[32mcontent/*.jpg[m
 content/*.png[m
\ No newline at end of file[m
[1mdiff --git a/index.js b/index.js[m
[1mindex 611575d..363e10e 100644[m
[1m--- a/index.js[m
[1m+++ b/index.js[m
[36m@@ -8,11 +8,11 @@[m [mconst robots = {[m
 }[m
 async function start(){[m
 [m
[31m-    // robots.input()[m
[31m-    // await robots.text()[m
[32m+[m[32m    robots.input()[m
[32m+[m[32m    await robots.text()[m
     await robots.image()[m
[31m-    // const content = robots.state.load()[m
[31m-    // console.dir(content,{depth:null})[m
[32m+[m[32m    const content = robots.state.load()[m
[32m+[m[32m    console.dir(content,{depth:null})[m
 }[m
 [m
 [m
[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex af5decd..189a290 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -107,6 +107,16 @@[m
         "color-convert": "^1.9.0"[m
       }[m
     },[m
[32m+[m[32m    "array-parallel": {[m
[32m+[m[32m      "version": "0.1.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/array-parallel/-/array-parallel-0.1.3.tgz",[m
[32m+[m[32m      "integrity": "sha1-j3hTCJJu1apHjEfmTRszS2wMlH0="[m
[32m+[m[32m    },[m
[32m+[m[32m    "array-series": {[m
[32m+[m[32m      "version": "0.1.5",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/array-series/-/array-series-0.1.5.tgz",[m
[32m+[m[32m      "integrity": "sha1-3103v8XC7wdV4qpPkv6ufUtaly8="[m
[32m+[m[32m    },[m
     "array-uniq": {[m
       "version": "1.0.3",[m
       "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",[m
[36m@@ -222,6 +232,31 @@[m
       "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",[m
       "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="[m
     },[m
[32m+[m[32m    "cross-spawn": {[m
[32m+[m[32m      "version": "4.0.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-4.0.2.tgz",[m
[32m+[m[32m      "integrity": "sha1-e5JHYhwjrf3ThWAEqCPL45dCTUE=",[m
[32m+[m[32m      "requires": {[m
[32m+[m[32m        "lru-cache": "^4.0.1",[m
[32m+[m[32m        "which": "^1.2.9"[m
[32m+[m[32m      },[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "lru-cache": {[m
[32m+[m[32m          "version": "4.1.5",[m
[32m+[m[32m          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",[m
[32m+[m[32m          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",[m
[32m+[m[32m          "requires": {[m
[32m+[m[32m            "pseudomap": "^1.0.2",[m
[32m+[m[32m            "yallist": "^2.1.2"[m
[32m+[m[32m          }[m
[32m+[m[32m        },[m
[32m+[m[32m        "yallist": {[m
[32m+[m[32m          "version": "2.1.2",[m
[32m+[m[32m          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",[m
[32m+[m[32m          "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI="[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "csv-stringify": {[m
       "version": "1.0.4",[m
       "resolved": "https://registry.npmjs.org/csv-stringify/-/csv-stringify-1.0.4.tgz",[m
[36m@@ -405,6 +440,32 @@[m
         "assert-plus": "^1.0.0"[m
       }[m
     },[m
[32m+[m[32m    "gm": {[m
[32m+[m[32m      "version": "1.23.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/gm/-/gm-1.23.1.tgz",[m
[32m+[m[32m      "integrity": "sha1-Lt7rlYCE0PjqeYjl2ZWxx9/BR3c=",[m
[32m+[m[32m      "requires": {[m
[32m+[m[32m        "array-parallel": "~0.1.3",[m
[32m+[m[32m        "array-series": "~0.1.5",[m
[32m+[m[32m        "cross-spawn": "^4.0.0",[m
[32m+[m[32m        "debug": "^3.1.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "debug": {[m
[32m+[m[32m          "version": "3.2.6",[m
[32m+[m[32m          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",[m
[32m+[m[32m          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",[m
[32m+[m[32m          "requires": {[m
[32m+[m[32m            "ms": "^2.1.1"[m
[32m+[m[32m          }[m
[32m+[m[32m        },[m
[32m+[m[32m        "ms": {[m
[32m+[m[32m          "version": "2.1.1",[m
[32m+[m[32m          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",[m
[32m+[m[32m          "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "google-auth-library": {[m
       "version": "3.1.2",[m
       "resolved": "https://registry.npmjs.org/google-auth-library/-/google-auth-library-3.1.2.tgz",[m
[36m@@ -670,6 +731,11 @@[m
       "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",[m
       "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="[m
     },[m
[32m+[m[32m    "isexe": {[m
[32m+[m[32m      "version": "2.0.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",[m
[32m+[m[32m      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="[m
[32m+[m[32m    },[m
     "isobject": {[m
       "version": "3.0.1",[m
       "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",[m
[36m@@ -875,6 +941,11 @@[m
         }[m
       }[m
     },[m
[32m+[m[32m    "pseudomap": {[m
[32m+[m[32m      "version": "1.0.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",[m
[32m+[m[32m      "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM="[m
[32m+[m[32m    },[m
     "psl": {[m
       "version": "1.1.31",[m
       "resolved": "https://registry.npmjs.org/psl/-/psl-1.1.31.tgz",[m
[36m@@ -1131,6 +1202,14 @@[m
         "yaeti": "^0.0.6"[m
       }[m
     },[m
[32m+[m[32m    "which": {[m
[32m+[m[32m      "version": "1.3.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",[m
[32m+[m[32m      "requires": {[m
[32m+[m[32m        "isexe": "^2.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "xtend": {[m
       "version": "4.0.1",[m
       "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz",[m
[1mdiff --git a/package.json b/package.json[m
[1mindex 246bef1..5aacaca 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -18,6 +18,7 @@[m
   "homepage": "https://github.com/raphael1-souza/Video-Robot#readme",[m
   "dependencies": {[m
     "algorithmia": "^0.3.10",[m
[32m+[m[32m    "gm": "^1.23.1",[m
     "google-trends-api": "^4.9.0",[m
     "googleapis": "^39.1.0",[m
     "image-downloader": "^3.4.2",[m
[1mdiff --git a/robots/image.js b/robots/image.js[m
[1mindex d131cdc..791222c 100644[m
[1m--- a/robots/image.js[m
[1m+++ b/robots/image.js[m
[36m@@ -1,14 +1,18 @@[m
 const state = require('./state')[m
 const imageDownloader = require ('image-downloader')[m
[32m+[m[32mconst gm = require('gm').subClass({imageMagick:true})[m
[32m+[m[32mconst path = require('path')[m
 const google = require('googleapis').google[m
 const customSearch = google.customsearch('v1')[m
 const googleSearchCredentials = require('../credentials/google-search.json')[m
 async function robot(){[m
     const content = state.load()[m
[31m-    // console.log(content);[m
[31m-    // await fetchImagesOfAllSentences(content)[m
[32m+[m[32m    await fetchImagesOfAllSentences(content)[m
     await downloadAllImages(content)[m
[31m-    // state.save(content)[m
[32m+[m[32m    await convertAllImages(content);[m
[32m+[m[32m    await createAllSentenceImages(content)[m
[32m+[m[32m    await createYoutubeThumbnail()[m
[32m+[m[32m    state.save(content)[m
     // const imagesArray = await fetchGoogleAndReturnImagesLinks('Michael Jackson')[m
     async function fetchImagesOfAllSentences(content){[m
         for (const sentence of content.sentences){[m
[36m@@ -58,8 +62,123 @@[m [masync function robot(){[m
             dest: `./content/${fileName}`[m
         })[m
     }[m
[31m-    [m
[31m-    [m
[32m+[m
[32m+[m[32m    async function convertAllImages(content){[m
[32m+[m[32m        for ( let sentenceIndex= 0; sentenceIndex<content.sentences.length;sentenceIndex++){[m
[32m+[m[32m            await convertImage(sentenceIndex)[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    async function convertImage(sentenceIndex){[m
[32m+[m[32m        return new Promise((resolve,reject)=>{[m
[32m+[m[32m            const inputFile = path.resolve(__dirname, '..', 'content', `${sentenceIndex}-original.png[0]`)[m
[32m+[m[32m            const outputFile = path.resolve(__dirname, '..', 'content', `${sentenceIndex}-converted.png`)[m
[32m+[m[32m            const width = 1920[m
[32m+[m[32m            const height = 1080[m
[32m+[m
[32m+[m[32m            gm()[m
[32m+[m[32m                .in(inputFile)[m
[32m+[m[32m                .out('(')[m
[32m+[m[32m                    .out('-clone')[m
[32m+[m[32m                    .out('0')[m
[32m+[m[32m                    .out('-background', 'white')[m
[32m+[m[32m                    .out('-blur', '0x9')[m
[32m+[m[32m                    .out('-resize', `${width}x${height}^`)[m
[32m+[m[32m                .out(')')[m
[32m+[m[32m                .out('(')[m
[32m+[m[32m                    .out('-clone')[m
[32m+[m[32m                    .out('0')[m
[32m+[m[32m                    .out('-background', 'white')[m
[32m+[m[32m                    .out('-resize', `${width}x${height}`)[m
[32m+[m[32m                .out(')')[m
[32m+[m[32m                .out('-delete', '0')[m
[32m+[m[32m                .out('-gravity', 'center')[m
[32m+[m[32m                .out('-compose', 'over')[m
[32m+[m[32m                .out('-composite')[m
[32m+[m[32m                .out('-extent', `${width}x${height}`)[m
[32m+[m[32m                .write(outputFile, (error) => {[m
[32m+[m[32m                if (error) {[m
[32m+[m[32m                    return reject(error)[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                console.log(`> Image converted: ${inputFile}`)[m
[32m+[m[32m                resolve()[m
[32m+[m[32m                })[m
[32m+[m[32m        })[m
[32m+[m[32m    }[m
[32m+[m[32m     async function createAllSentenceImages(content){[m
[32m+[m[32m         for(let sentenceIndex=0; sentenceIndex < content.sentences.length; sentenceIndex++){[m
[32m+[m[32m             await createSentenceImage(sentenceIndex,content.sentences[sentenceIndex].text)[m
[32m+[m[32m         }[m
[32m+[m[32m     }[m
[32m+[m[32m     async function createSentenceImage(sentenceIndex,sentenceText){[m
[32m+[m[32m         return new Promise((resolve,reject)=>{[m
[32m+[m[32m            const outputFile = path.resolve(__dirname, '..', 'content', `${sentenceIndex}-sentence.png`)[m
[32m+[m[32m            const templateSettings = {[m
[32m+[m[32m                0: {[m
[32m+[m[32m                  size: '1920x400',[m
[32m+[m[32m                  gravity: 'center'[m
[32m+[m[32m                },[m
[32m+[m[32m                1: {[m
[32m+[m[32m                  size: '1920x1080',[m
[32m+[m[32m                  gravity: 'center'[m
[32m+[m[32m                },[m
[32m+[m[32m                2: {[m
[32m+[m[32m                  size: '800x1080',[m
[32m+[m[32m                  gravity: 'west'[m
[32m+[m[32m                },[m
[32m+[m[32m                3: {[m
[32m+[m[32m                  size: '1920x400',[m
[32m+[m[32m                  gravity: 'center'[m
[32m+[m[32m                },[m
[32m+[m[32m                4: {[m
[32m+[m[32m                  size: '1920x1080',[m
[32m+[m[32m                  gravity: 'center'[m
[32m+[m[32m                },[m
[32m+[m[32m                5: {[m
[32m+[m[32m                  size: '800x1080',[m
[32m+[m[32m                  gravity: 'west'[m
[32m+[m[32m                },[m
[32m+[m[32m                6: {[m
[32m+[m[32m                  size: '1920x400',[m
[32m+[m[32m                  gravity: 'center'[m
[32m+[m[32m                }[m
[32m+[m[41m        [m
[32m+[m[32m              }[m
[32m+[m[41m        [m
[32m+[m[32m              gm()[m
[32m+[m[32m                .out('-size', templateSettings[sentenceIndex].size)[m
[32m+[m[32m                .out('-gravity', templateSettings[sentenceIndex].gravity)[m
[32m+[m[32m                .out('-background', 'transparent')[m
[32m+[m[32m                .out('-fill', 'white')[m
[32m+[m[32m                .out('-kerning', '-1')[m
[32m+[m[32m                .out(`caption:${sentenceText}`)[m
[32m+[m[32m                .write(outputFile, (error) => {[m
[32m+[m[32m                  if (error) {[m
[32m+[m[32m                    return reject(error)[m
[32m+[m[32m                  }[m
[32m+[m[41m        [m
[32m+[m[32m                  console.log(`> Sentence created: ${outputFile}`)[m
[32m+[m[32m                  resolve()[m
[32m+[m[32m                })[m
[32m+[m[32m            })[m
[32m+[m[32m     }[m
[32m+[m
[32m+[m[32m    async function createYoutubeThumbnail(){[m
[32m+[m[32m        const inputFile = path.resolve(__dirname, '..', 'content', `6-original.png[0]`)[m
[32m+[m[32m        const outputFile = path.resolve(__dirname, '..', 'content', `youtube-thumbnail.jpg`)[m
[32m+[m[32m        return new Promise((resolve,reject)=>{[m
[32m+[m[32m            gm()[m
[32m+[m[32m                .in(inputFile)[m
[32m+[m[32m                .write(outputFile,(error)=>{[m
[32m+[m[32m                    if(error){[m
[32m+[m[32m                        return reject(error)[m
[32m+[m[32m                    }[m
[32m+[m[32m                    console.log('> Creating Youtube Thumbnail')[m
[32m+[m[32m                    resolve()[m
[32m+[m[32m                })[m
[32m+[m[32m        })[m
[32m+[m[32m    }[m
 }[m
 [m
 module.exports = robot[m
\ No newline at end of file[m
